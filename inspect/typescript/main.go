package main

import (
	"fmt"
	"os"

	"github.com/tada-team/tdproto/inspect"
)

func main() {
	if err := inspect.Render(os.Stdout, `// Autogenerated. Do not edit.
declare namespace TdProto {

   /**
    * Contact, group or task id
    */
   type JID = string;

   /**
    * Task tab name
    */
   type TaskTabKey = string;

   /**
    * Chat type
    */
   const enum ChatType {
      DIRECT = 'direct',
      GROUP = 'group',
      TASK = 'task',
   }

   /**
    * Contact status in team
    */
   const enum TeamStatus {
      OWNER = 'owner',
      ADMIN = 'admin',
      MEMBER = 'member',
      GUEST = 'guest',
	}

   /**
    * Contact status in group
    */
   const enum GroupStatus {
      ADMIN = 'admin',
      MEMBER = 'member',
   }

   /**
    * Message type
    */
   const enum Mediatype {
      PLAIN = 'plain',
      CHANGE = 'change',
      DELETED = 'deleted',
      FILE = 'file',
      IMAGE = 'image',
      VIDEO = 'video',
      AUDIOMSG = 'audiomsg',
      CONTACT = 'contact',
      PDF = 'pdf',
   }

   /**
    * Message type
    */
   const enum Mediasubtype {
      STICKER = 'sticker',
      NEWTASK = 'newtask',
   }

   type MessageLinks = MessageLink[];

{{- range $s := .Structs}}
   /**
    * {{$s.Help}}.
    */
   export interface {{$s.Name}} { {{- range $f := $s.Fields }}
      /**
      * {{$f.Help}}.{{ if $f.Omitempty }} Omitempty.{{ end }}
      */
      {{$f.JSName}}: {{$f.TSType}}{{ if $f.List }}[]{{end}}{{ if $f.Null }} | null{{ end }};
{{end}}
   }
{{end}}
}

{{- range $s := .Structs}}
/**
 * Create New{{$s.Name}} from raw json.
 */
export const New{{$s.Name}} = function (raw: any): TdProto.{{$s.Name}} { return {  
{{- range $f := $s.Fields -}}
{{- if $f.InternalType -}}
	{{- if $f.List }}
	{{$f.JSName}}: raw['{{$f.Json}}'].map(New{{ $f.TSType }}),
	{{- else }}
	{{$f.JSName}}: New{{ $f.TSType }}(raw['{{$f.Json}}']),
	{{- end -}}
{{- else }}
	{{$f.JSName}}: raw['{{$f.Json}}'],
{{- end -}}
{{- end }}
} }
{{end}}

`); err != nil {
		fmt.Println(err)
	}
}
