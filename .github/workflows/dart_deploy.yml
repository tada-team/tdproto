---
name: Deploy Dart

on: [push, workflow_dispatch]

env:
  TDPROTO_DIR: tdproto
  CLONE_DIR: clone_dir

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-20.04
    environment: dart_deployment
    steps:
      - uses: actions/checkout@v2
        with:
          path: ${{ env.TDPROTO_DIR }}
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      - name: Clone tdproto_dart repo
        uses: actions/checkout@v2
        with:
          repository: 'tada-team/tdproto_dart'
          ssh-key: ${{ secrets.DART_DEPLOYMENT_KEY }}
          ref: autogen
          path: ${{ env.CLONE_DIR }}
      - name: Install flutter
        uses: subosito/flutter-action@dbf1fa04f4d2e52c33185153d06cdb5443aa189d
        with:
          flutter-version: '3.0'
      - name: Generate Dart
        working-directory: ${{ env.TDPROTO_DIR }}
        run: |
          cd ./codegen
          chmod a+x make-dart.sh
          ./make-dart.sh "${GITHUB_WORKSPACE}/${CLONE_DIR}/"
      - name: Analyze flutter
        run: |
          cd "${GITHUB_WORKSPACE}/${CLONE_DIR}/"
          flutter analyze --no-fatal-infos
      - name: Commit and upload dart
        if: github.ref == 'refs/heads/master'
        working-directory: ${{ env.CLONE_DIR }}
        run: |
          git add --all
          git config --global user.email "action@github.com"
          git config --global user.name "Github Action"
          git commit -m "Generate dart on $(date)" --allow-empty
          git push
